"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7097],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>d});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),i=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},l=function(e){var r=i(e.components);return n.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),h=i(t),d=o,m=h["".concat(p,".").concat(d)]||h[d]||u[d]||a;return t?n.createElement(m,c(c({ref:r},l),{},{components:t})):n.createElement(m,c({ref:r},l))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=h;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var i=2;i<a;i++)c[i]=t[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},618:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=t(7462),o=(t(7294),t(3905));const a={},c="Tailored Research",s={unversionedId:"gpt-researcher/tailored-research",id:"gpt-researcher/tailored-research",isDocsHomePage:!1,title:"Tailored Research",description:"The GPT Researcher package allows you to tailor the research to your needs such as researching on specific sources or local documents, and even specify the agent prompt instruction upon which the research is conducted.",source:"@site/docs/gpt-researcher/tailored-research.md",sourceDirName:"gpt-researcher",slug:"/gpt-researcher/tailored-research",permalink:"/docs/gpt-researcher/tailored-research",editUrl:"https://github.com/tavily-ai/tavily-python/tree/master/docs/docs/gpt-researcher/tailored-research.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Agent Example",permalink:"/docs/gpt-researcher/example"},next:{title:"Multi Agent Frameworks",permalink:"/docs/gpt-researcher/agent_frameworks"}},p=[{value:"Research on Specific Sources \ud83d\udcda",id:"research-on-specific-sources-",children:[],level:3},{value:"Specify Agent Prompt \ud83d\udcdd",id:"specify-agent-prompt-",children:[],level:3},{value:"Research on Local Documents \ud83d\udcc4",id:"research-on-local-documents-",children:[],level:3}],i={toc:p};function l(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},i,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tailored-research"},"Tailored Research"),(0,o.kt)("p",null,"The GPT Researcher package allows you to tailor the research to your needs such as researching on specific sources or local documents, and even specify the agent prompt instruction upon which the research is conducted."),(0,o.kt)("h3",{id:"research-on-specific-sources-"},"Research on Specific Sources \ud83d\udcda"),(0,o.kt)("p",null,"You can specify the sources you want the GPT Researcher to research on by providing a list of URLs. The GPT Researcher will then conduct research on the provided sources."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from gpt_researcher import GPTResearcher\nimport asyncio\n\nasync def get_report(query: str, report_type: str, sources: list) -> str:\n    researcher = GPTResearcher(query=query, report_type=report_type, source_urls=sources)\n    await researcher.conduct_research()\n    report = await researcher.write_report()\n    return report\n\nif __name__ == "__main__":\n    query = "What are the latest advancements in AI?"\n    report_type = "research_report"\n    sources = ["https://en.wikipedia.org/wiki/Artificial_intelligence", "https://www.ibm.com/watson/ai"]\n\n    report = asyncio.run(get_report(query, report_type, sources))\n    print(report)\n')),(0,o.kt)("h3",{id:"specify-agent-prompt-"},"Specify Agent Prompt \ud83d\udcdd"),(0,o.kt)("p",null,"You can specify the agent prompt instruction upon which the research is conducted. This allows you to guide the research in a specific direction and tailor the report layout.\nSimplay pass the prompt as the ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," argument to the ",(0,o.kt)("inlineCode",{parentName:"p"},"GPTResearcher"),' class and the "custom_report" ',(0,o.kt)("inlineCode",{parentName:"p"},"report_type"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from gpt_researcher import GPTResearcher\nimport asyncio\n\nasync def get_report(prompt: str, report_type: str) -> str:\n    researcher = GPTResearcher(query=prompt, report_type=report_type)\n    await researcher.conduct_research()\n    report = await researcher.write_report()\n    return report\n    \nif __name__ == "__main__":\n    report_type = "custom_report"\n    prompt = "Research the latest advancements in AI and provide a detailed report in APA format including sources."\n\n    report = asyncio.run(get_report(prompt=prompt, report_type=report_type))\n    print(report)\n')),(0,o.kt)("h3",{id:"research-on-local-documents-"},"Research on Local Documents \ud83d\udcc4"),(0,o.kt)("p",null,"TBD!"))}l.isMDXComponent=!0}}]);